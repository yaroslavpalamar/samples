Statement: Design a simplified version of Twitter where people can post tweets, follow other people and favorite tweets.

Questions:
Q1:
how many users do we expect this system to handle? - let’s aim for 10 million users generating around 100 million requests per day

Q2:
That’s great but let’s continue. Since we have the notion of following someone, how connected will these users be? 
After all, they will form a graph with the users being the nodes and the edges will represent who follows whom.
we expect that each user will be following 200 other users on average, but expect some extraordinary users with tens of thousands of followers

Conclusion:
Let’s make a few very simple calculations with the information we just received. 
We will have around 10 million users. Average number of followed other users is 200. 
This means that the network of users will have about 200 * 10 million edges. 
This makes 2 billion edges. If the average number of tweets per day is 10 million the number of favorites will then be 20 million.

To summarize, here are some more things we now know:
10 million users
10 million tweets per day
20 million tweet favorites per day
100 million HTTP requests to the site
2 billion “follow” relations
Some users and tweets could generate an extraordinary amount of traffic

We can divide our architecture in two logical parts: 
1) the logic, which will handle all incoming requests to the application and 
2) the data storage that we will use to store all the data that needs to be persisted. 

application will need to handle requests for:
-posting new tweets
-following a user
-favoriting a tweet
-displaying data about users and tweets

The first three operations require things to be written somewhere in our database, 
while the last is more about reading data and returning it back to the user. 
The last operation will also be the most common

More concrete description:
-There will be a profile page for each user, 
which will show us their latest tweets and will allow for older tweets to be shown.
-Each such page will have a button for following the user. and other buttons
-After they click a button the message will be stored and will appear on their profile page. 
 
___________
We know that the expected daily load is 100 million requests.
This means that on average the app will receive around 1150 requests per second.
-it is good to have more than one server If you only have one machine and it goes down your whole application is down. 
-In our particular problem we would definitely suggest using a load balancer, 
which handles initial traffic and sends requests to a set of servers running one or more instances of the application.
-Behind the load balancer we will be running a set of servers that are running our application and are capable of handling the different requests that arrive.
_________________
Storing the data
We need to store data about our users and their tweets to make the application complete.
Obviously, there are some relations between our data objects - users and tweets. 
Let’s assess the approximate size of the data to be stored. 
We said that we expect around 10 million users. 

